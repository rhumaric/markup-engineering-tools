@import "../../utils/units";
@import "../../utils/breakpoints";

$responsive-base-length: 16;
$responsive-base-viewport-width: breakpoint(xs);
$responsive-viewport-width: breakpoint(lg);

/// Creates a computed value that scales
/// from `$base-length` at `$base-vieport-width`
/// to `$length` at `$viewport-width`
@function responsive(
  $length,
  $viewport-width: $responsive-viewport-width,
  $base-length: $responsive-base-length,
  $base-viewport-width: $responsive-base-viewport-width
) {
  $length-growth: strip-unit(px($length) - px($base-length));
  // String otherwise SASS will try to evaluate and fail due to unit difference
  $viewport-ramp: "(100vw - #{px($base-viewport-width)})";
  $viewport-base: strip-unit(px($viewport-width) - px($base-viewport-width));

  // Silly, but prettier introduces a line-break that ends up in the generated calc
  // we don't want that in the output so forcing things as string
  @return #{"calc(#{rem($base-length)} + #{$length-growth} * #{$viewport-ramp} / #{$viewport-base})"};
}

// TODO: Allow $length to be described as a (breakpoint length) list?
// (1200 30, 768 20, 375 18)
@mixin responsive(
  $property,
  $length,
  $viewport-width: $responsive-viewport-width,
  $base-length: $responsive-base-length,
  $base-viewport-width: $responsive-base-viewport-width
) {
  #{$property}: rem($length);

  @media #{until($viewport-width)} {
    #{$property}: responsive(
      $length,
      $viewport-width,
      $base-length,
      $base-viewport-width
    );
  }

  @media #{until($base-viewport-width)} {
    #{$property}: rem($base-length);
  }
}
