// From sass-mq: https://github.com/sass-mq/sass-mq/blob/master/_mq.scss
/// Quick sort
///
/// @author Sam Richards
/// @access private
/// @param {List} $list - List to sort
/// @param {String} $order - asc (default) for ascending, desc for descending
/// @returns {List} Sorted List
@function list-sort($list, $order: asc) {
  $before: ();
  $equal: ();
  $after: ();

  @if length($list) > 1 {
    $seed: nth($list, ceil(length($list) / 2));

    @each $item in $list {
      @if ($item == $seed) {
        $equal: append($equal, $item);
      } @else if ($order == desc) and ($item > $seed) {
        $before: append($before, $item);
      } @else if ($order == desc) and ($item < $seed) {
        $after: append($after, $item);
      } @else if ($item < $seed) {
        $before: append($before, $item);
      } @else if ($item > $seed) {
        $after: append($after, $item);
      }
    }

    @return join(
      join(list-sort($before, $order), $equal),
      list-sort($after, $order)
    );
  }

  @return $list;
}
